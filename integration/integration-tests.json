{
  "info": {
    "_postman_id": "6773efdf-b381-4cdb-bd58-4049f0708b05",
    "name": "Hour Logger",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Integration Tests",
      "item": [
        {
          "name": "Create User",
          "item": [
            {
              "name": "Validation Tests",
              "item": []
            },
            {
              "name": "Create A New User",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "var uuid = require(\"uuid\");\r",
                      "\r",
                      "var userId = uuid.v4();\r",
                      "var firstName = pm.variables.replaceIn('{{$randomFirstName}}');\r",
                      "var lastName = pm.variables.replaceIn('{{$randomLastName}}');\r",
                      "var email = firstName + lastName + '@example.com'; // built in one uses real emails - https://github.com/postmanlabs/postman-app-support/issues/971#issuecomment-565459035\r",
                      "var studentNumber = Math.floor(10000000 + Math.random() * 90000000);\r",
                      "\r",
                      "pm.collectionVariables.set(\"userId\", userId);\r",
                      "pm.collectionVariables.set(\"firstName\", firstName);\r",
                      "pm.collectionVariables.set(\"lastName\", lastName);\r",
                      "pm.collectionVariables.set(\"email\", email);\r",
                      "pm.collectionVariables.set(\"studentNumber\", studentNumber);"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"User fields are populated correctly\", () => {\r",
                      "    let response = pm.response.json();\r",
                      "    pm.expect(response.firstName).to.equal(pm.collectionVariables.get(\"firstName\"));\r",
                      "    pm.expect(response.lastName).to.equal(pm.collectionVariables.get(\"lastName\"));\r",
                      "    pm.expect(response.email).to.equal(pm.collectionVariables.get(\"email\"));\r",
                      "    pm.expect(response.userId).to.equal(pm.collectionVariables.get(\"userId\"));\r",
                      "    pm.expect(response.studentNumber).to.equal(`${pm.collectionVariables.get(\"studentNumber\")}`);\r",
                      "    pm.expect(response.hours).to.equal(0);\r",
                      "    pm.expect(response.finalHours).to.equal(0);\r",
                      "    pm.expect(response.adminType).to.equal(\"USER\");\r",
                      "    pm.expect(response.transactions.length).to.equal(0);\r",
                      "    pm.expect(response.requests.length).to.equal(0);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"userId\": \"{{userId}}\",\r\n    \"studentNumber\": \"{{studentNumber}}\",\r\n    \"userType\": \"ENGINEER_ENROLLED\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "https://{{API_URL}}.execute-api.{{API_REGION}}.amazonaws.com/{{API_STAGE}}/users/",
                  "protocol": "https",
                  "host": [
                    "{{API_URL}}",
                    "execute-api",
                    "{{API_REGION}}",
                    "amazonaws",
                    "com"
                  ],
                  "path": ["{{API_STAGE}}", "users", ""]
                }
              },
              "response": []
            },
            {
              "name": "Get Users",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"User exists in array\", () => {\r",
                      "    let response = pm.response.json();\r",
                      "    const user = response.find(user => user.userId === pm.collectionVariables.get(\"userId\"));\r",
                      "    pm.expect(user).exist;\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://{{API_URL}}.execute-api.{{API_REGION}}.amazonaws.com/{{API_STAGE}}/users/",
                  "protocol": "https",
                  "host": [
                    "{{API_URL}}",
                    "execute-api",
                    "{{API_REGION}}",
                    "amazonaws",
                    "com"
                  ],
                  "path": ["{{API_STAGE}}", "users", ""]
                }
              },
              "response": []
            },
            {
              "name": "Get User by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", () => {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"User fields are populated correctly\", () => {\r",
                      "    let response = pm.response.json();\r",
                      "    pm.expect(response.firstName).to.equal(pm.collectionVariables.get(\"firstName\"));\r",
                      "    pm.expect(response.lastName).to.equal(pm.collectionVariables.get(\"lastName\"));\r",
                      "    pm.expect(response.email).to.equal(pm.collectionVariables.get(\"email\"));\r",
                      "    pm.expect(response.userId).to.equal(pm.collectionVariables.get(\"userId\"));\r",
                      "    pm.expect(response.studentNumber).to.equal(`${pm.collectionVariables.get(\"studentNumber\")}`);\r",
                      "    pm.expect(response.hours).to.equal(0);\r",
                      "    pm.expect(response.finalHours).to.equal(0);\r",
                      "    pm.expect(response.adminType).to.equal(\"USER\");\r",
                      "    pm.expect(response.transactions.length).to.equal(0);\r",
                      "    pm.expect(response.requests.length).to.equal(0);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "https://{{API_URL}}.execute-api.{{API_REGION}}.amazonaws.com/{{API_STAGE}}/users/{{userId}}",
                  "protocol": "https",
                  "host": [
                    "{{API_URL}}",
                    "execute-api",
                    "{{API_REGION}}",
                    "amazonaws",
                    "com"
                  ],
                  "path": ["{{API_STAGE}}", "users", "{{userId}}"]
                }
              },
              "response": []
            },
            {
              "name": "Delete User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 204\", () => {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "https://{{API_URL}}.execute-api.{{API_REGION}}.amazonaws.com/{{API_STAGE}}/users/{{userId}}",
                  "protocol": "https",
                  "host": [
                    "{{API_URL}}",
                    "execute-api",
                    "{{API_REGION}}",
                    "amazonaws",
                    "com"
                  ],
                  "path": ["{{API_STAGE}}", "users", "{{userId}}"]
                }
              },
              "response": []
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "userId",
      "value": ""
    },
    {
      "key": "firstName",
      "value": ""
    },
    {
      "key": "lastName",
      "value": ""
    },
    {
      "key": "email",
      "value": ""
    },
    {
      "key": "studentNumber",
      "value": ""
    }
  ]
}
