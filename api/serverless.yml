service: hour-logger

frameworkVersion: '2'

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: us-west-1
  environment:
    userTable: ${env:userTable}-${self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamobd:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "*"
      
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  webpack:
    webpackConfig: './webpack.config.js'
    includeModules: true
    packager: 'yarn'
    excludeFiles: src/**/*.test.js

functions:
  create-user:
    handler: src/handlers/users.create
    memorySize: 128
    description: "Creates user"
    events:
      - http:
            path: /users/create
            method: post
            # authorizer: aws_iam
            cors: true
  
  get-user:
    handler: src/handlers/users.get
    memorySize: 128
    description: "Gets current user informations"
    events:
      - http:
            path: /users/{userId}
            method: get
            cors: true
            request: 
              parameters: 
                paths: 
                  userId: true

  delete-user: 
    handler: src/handlers/users.deleteUser
    memorySize: 128
    description: "Deletes a user from the DynamoDB table"
    events:
      - http:
            path: /users/{userId}
            method: delete
            cors: true
            request: 
              parameters: 
                paths: 
                  userId: true
  check-in:
    handler: src/handlers/hours.checkIn
    memorySize: 128
    description: "Creates new hour transaction"
    events:
      - http:
            path: /users/check-in
            method: post
            # authorizer: aws_iam
            cors: true

  update-hours:
    handler: src/handlers/hours.updateHours
    memorySize: 128
    description: "Takes in checkIn and checkOut times and recalculates total hours completed"
    events:
      - http:
            path: /hours/update
            method: post
            # authorizer: aws_iam
            cors: true

resources:
  Resources:
    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "userId"
            AttributeType: "S"
          -
            AttributeName: "studentNumber"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "userId"
            KeyType: "HASH"
        GlobalSecondaryIndexes:
          - IndexName: StudentNumberIndex
            KeySchema:
              - AttributeName: studentNumber
                KeyType: HASH
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.userTable}
